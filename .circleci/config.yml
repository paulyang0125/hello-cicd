version: 2.1 # use CircleCI 2.1
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/node:latest # with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: Check Node.js version
          command: node -v
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          name: Restore dependencies from cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: # run tests
          name: test
          command: npm test
      - run:
          name: Install EB Command Line
          command: >
            sudo apt-get update &&
            sudo apt-get install -y python python-dev python-pip python-virtualenv &&
            sudo rm -rf /var/lib/apt/lists/* &&
            sudo pip install awsebcli &&
            sudo pip install --upgrade --user awsebcli
             sudo pip install --upgrade --user awsebcli
      - run:
          name: Setup EB Credentials
          command: >
            mkdir -p ~/.aws &&
            echo [default] >> ~/.aws/credentials &&
            echo aws_access_key_id = $AWS_ACCESS_KEY_ID >> ~/.aws/credentials &&
            echo aws_secret_access_key = $AWS_SECRET_ACCESS_KEY >> ~/.aws/credentials
      - deploy:
          name: Deploy To ENV Staging
          command: >
            eb use env-dev --profile default
            eb deploy --profile default
      
